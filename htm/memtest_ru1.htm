<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title></title>
</head>

<body bgcolor="#FFFFFF">

<p align="left"><font size="3">Программа MEMTEST предназначена
для проверки оперативной памяти PC-совместимых
компьютеров на основе процессора 386 и выше.
Программа написана с учетом особенностей
организации системной шины, кэша и памяти
процессоров класса 80486, Pentium и Pentium Pro.</font></p>

<p>Максимальный объем тестируемой памяти
составляет 3 Гбайт.</p>

<p>Программа MEMTEST может быть запущена только
из-под &quot;голого&quot; DOSа, то есть в отсутствие
каких-либо менеджеров памяти (HIMEM.SYS, EMM386.EXE). Для
получения такого сеанса DOS необходимо во время
загрузки Windows 95 (когда загрузчик написал &quot;<strong>Starting
Windows 95...</strong>&quot;) нажать <font face="Times New Roman"><kbd>Shift+F5</kbd></font>.
При использовании Windows 98 требуется во время
загрузки системы держать нажатой клавишу <tt>Ctrl</tt>
(непосредственно перед окончанием инициализации
BIOS, например, когда выведен список
детектированных устройств). Windows 98 покажет
стартовое меню, после чего нажмите <font
face="Times New Roman"><kbd>Shift+F5.</kbd></font></p>

<p>Отключать внешний/внутренний кэш, в отличие от
старых тестовых программ (таких, как CheckIt), не
требуется. Тестовые последовательности,
используемые программой, рассчитаны на пакетные
(burst) пересылки между памятью, внешним кэшем и
процессором, которые происходят в работе на
реальных задачах. При выключенном кэше пакетные
пересылки не будут протестированы.</p>

<p>Командная строка для запуска программы имеет
следующий формат:</p>

<p><font face="Times New Roman"><samp><strong>MEMTEST &lt;размер памяти&gt;
&lt;начало тестируемой области&gt; /ключи программы</strong></samp></font></p>

<p>Размер памяти и начало тестируемой области
задаются в мегабайтах. Указывать их
необязательно - по умолчанию тестируется вся
доступная память до 512 МБ. Если ваш компьютер
имеет больше 512 мегабайт памяти, то размер нужно
указать. Программа тестирует только реально
присутствующую память, поэтому если указано
больше, то вреда не будет.</p>

<p>Программа не может тестировать меньше 8
мегабайт.</p>

<p>MEMTEST понимает следующие ключи:</p>

<p>/row &lt;size&gt; - задает размер (в килобайтах) строки
матрицы памяти микросхем, установленных в вашем
компьютере. Допускается значение, являющееся
степенью двойки, от 4 до 64. По умолчанию
перебираются все возможные размеры от 4 до 64
килобайт. Указывать этот параметр следует только
тогда, когда вы точно знаете размер строки. Если
указанное значение не соответствует реальному,
то ошибки не будет, просто программа не сможет
хорошо протестировать помехи на усилителях
считывания разрядных линий.</p>

<p>/delay &lt;time1&gt; &lt;time2&gt; - задержка между записью и
чтением, в секундах. На каждом втором проходе
после записи в память вставляется задержка
&lt;time1&gt;, по умолчанию 1 секунда. На 63 и 64 проходе из
64 значение увеличивается до &lt;time2&gt;, по умолчанию
60 секунд. Благодаря такой задержке можно
проверить, насколько надежно работает
регенерация динамической памяти;</p>

<p>/speed - программа измерит тактовую частоту
процессора и скорость чтения/записи кэша второго
уровня и самой памяти, а также скорость записи в
режиме write allocate - через кэш;</p>

<p>/readtwice - выполняет сравнение данных дважды;</p>

<p>/writethru - запрещает кэширование записи (writeback);</p>

<p>/nocache - запрещает кэширование. Обычно не следует
указывать этот ключ.</p>

<p>/nocheck - запрещает контроль процессора на
процессорах класса Pentium.</p>

<p>/nousblegacy - запрещает прерывание USB
контроллера, которое обслуживает USB
клавиатуру. На некоторых системных платах
это прерывание постоянно модифицирует
ячейки памяти в первом килобайте, мешая
работе теста.</p>

<p>/fastdetect - быстрое детектирование размера
памяти.</p>

<p>/preheat - перед записью каждого тестового образца
в память программа читает содержимое памяти,
используя специальную последовательность
обращений, при которой микросхемы памяти
потребляют наибольшую мощность. Это делается для
того, чтобы испытать память на повышенной
температуре. Следует помнить, что на
некоторых ноутбуках применение этой опции
может вызвать срабатывание защиты по
потребляемому току.&nbsp;</p>

<p>После запуска программа MEMTEST переводит
процессор в защищенный 32-битный режим, поэтому
возврат в DOS из нее невозможен. Остановить
тестирование можно только перезагрузкой - либо
нажатием <font face="Times New Roman"><kbd>Ctrl+Alt+Del</kbd></font>, либо
нажатием кнопки <font face="Times New Roman"><kbd>Reset</kbd></font>,
либо выключив и через несколько секунд включив
питание компьютера (рекомендуется только для
систем без кнопки <font face="Times New Roman"><kbd>Reset</kbd></font>).</p>

<p>Если в ходе тестирования обнаружено много
ошибок, программа останавливает вывод на. экран,
чтобы сообщения об ошибках не были потеряны. Для
продолжения теста неободимо нажать <font
face="Times New Roman"><kbd>Enter</kbd></font>.</p>

<p>В ходе работы программа печатает номер
тестового прохода. Полный цикл тестирования
составляет 64 прохода. Время выполнения зависит
от процессора и объема памяти, однако надо
учитывать, что каждый второй проход включает 36
секунд задержки, а два последних прохода из 64 - 36
минут.</p>

<hr>

<p align="center"><font size="4">Выполняемые тесты</font></p>

<p>Сначала выполняется цикл записи/чтения
псевдослучайных данных. Псевдослучайные данные
представляют собой последовательность образцов
&quot;все единицы&quot;/&quot;все нули&quot;, чередующиеся
по псевдослучайной последовательности. Этот
тест служит для проверки адресации.</p>

<p>Следующим тестом является тест на чередование
бегущей единицы и бегущего нуля. Такая тестовая
последовательность заменяет также тесты &quot;все
нули&quot;, &quot;все единицы&quot; и позволяет проверить
работу системной шины в условиях максимальной
помехи. Записывается последовательность
64-битных слов следующего вида:</p>

<p><font face="Times New Roman"><code>0111111111111111 0111111111111111 0111111111111111
0111111111111111<br>
1000000000000000 1000000000000000 1000000000000000 1000000000000000<br>
0111111111111111 0111111111111111 0111111111111111 0111111111111111<br>
1000000000000000 1000000000000000 1000000000000000 1000000000000000</code></font></p>

<p>После того, как вся проверяемая память
прописана тестовым образцом, она читается в
направлении увеличения адреса и сравнивается с
эталоном. По мере чтения память прописывается
инверсным значением тестового образца. После
того, как вся память прочитана и прописана новым
образцом, она читается в направлении уменьшения
адреса и опять сравнивается с новым образцом. При
этом она прописывается следующим образцом,
сдвинутым вправо на один бит:</p>

<p><font face="Times New Roman"><code>1011111111111111 1011111111111111 1011111111111111
1011111111111111<br>
0100000000000000 0100000000000000 0100000000000000 0100000000000000<br>
1011111111111111 1011111111111111 1011111111111111 1011111111111111<br>
0100000000000000 0100000000000000 0100000000000000 0100000000000000</code></font></p>

<p>Такие циклы выполняются для всех позиций бит
(всего 16). При проверке систем, построенных на
основе процессоров с 32-разрядной шиной (i80386, i80486),
используются 32-битовые тестовые образцы.</p>

<p>Затем выполняются тесты &quot;все нули&quot;/&quot;все
единицы&quot;, с инвертированием по строкам матрицы
памяти. Они учитывают <a href="#DRAM">особенности
организации динамической памяти</a>. </p>

<p>Для создания максимальной помехи на разрядных
линиях тестовый образец инвертируется через
каждые от 4 до 64 килобайта (интервал изменяется на
каждом тестовом проходе), а чтение данных
выполняется с чередованием строк - 32 байта из
одной строки, 32 байта из другой строки. Образцы
вида &quot;все нули&quot; и &quot;все единицы&quot; создают
максимальную помеху на соседних разрядных
линиях.</p>

<p>После выполнения каждого прохода код программы
перемещается на новое место в физической памяти,
позволяя проверить память, где она была записана.</p>

<p>На каждом втором проходе программа делает
задержку порядка 1 секунды между записью данных и
их чтением. Во время задержки какие-либо
обращения к памяти отсутствуют, потому что вся
выборка команд производится из кэша первого
уровня. Это позволяет проверить надежность
регенерации динамической памяти при отсутствии
обращений. Во время выполнения 2 тестовых
проходов из 64 задержка увеличивается до 60 секунд.
Эта задержка может быть задана в командной
строке при запуске теста.</p>

<p>Для проверки передач &quot;внешний
кэш-процессор&quot;, часть тестовых проходов
выполняется с предвыборкой из памяти во внешний
кэш. Без предвыборки передача идет из памяти
прямо в процессор. Для проверки передачи
&quot;внешний кэш-память&quot;, часть тестовых
проходов выполняется с предвыборкой памяти во
внешний кэш во время записи, что предотвращает
непосредственную запись данных из процессора в
память. Для проверки пакетных передач
&quot;процессор-память&quot; и &quot;процессор-внешний
кэш&quot;, часть тестовых проходов выполняется с
предвыборкой памяти во внутренний кэш при
записи.</p>

<p align="center"><a name="DRAM"></a><font size="4">Особенности
организации динамической памяти</font></p>

<p>Как известно, память DRAM организована в виде
матрицы. Младшие разряды физического адреса
соответствуют адресам столбцов, старшие разряды
- адреса строк. Размер строки в пересчете на
физический адрес может составлять от 4 до 64
килобайт<a name="1ref"></a><a href="#1">1</a>. При каждом
обращении к памяти происходит полное чтение
одной строки матрицы, выбор конкретного бита
строки определяется младшими разрядами адреса.
Когда ячейкя динамической памяти считывается,
информация в ней разрушается, поэтому усилители
считывания записывают прочитанную информацию
обратно. Каждый столбец матрицы памяти имеет две
разрядных линии - одна подсоединяется к
считываемой ячейке памяти, другая - к опорной
ячейке, которая заряжена до половинного
напряжения. Половина строк матрицы подсоединена
к одной линии, половина к другой, и
соответственно имеется два (или более) набора
опорных ячеек.</p>

<p>Для правильного считывания важно, чтобы перед
циклом чтения потенциалы разрядной и опорной
линии были одинаковы, так как из-за того, что
емкость разрядной линии намного больше емкости
запоминающего конденсатора, величина
считываемого сигнала составляет лишь десятки
милливольт. Для выравнивания потенциалов должно
быть выдержано определенное время между циклами
(precharge).</p>

<p><a name="1"></a><a href="#1ref">1</a>. Полный цикл регенерации
составляет 1024-4096 строк, емкость одного банка на
16-мегабитных микросхемах составляет 16 мегабайт</p>

<p align="center">История изменений</p>

<p>1.04 (15 августа 2000). Исправлена ошибка в
функции, перемещающей тест на различное
место в памяти, для памяти больше 960 МБайт.
Добавлены ключи /nousblegacy и /fastdetect.&nbsp;</p>

<p>1.03 (28 марта 1999). Исправлена ошибка в измерении
времени в V1.02, вызванная переходом на MSVC 5.0.
Добавлена опция /preheat для повышения нагрева
памяти.</p>

<p>1.02 (25 февраля 1999). Исправлено определение
процессоров i386 и i486. Исправлена проблема,
вызывавшая уход на перезагрузку систем с
системными платами производства Intel (Phoenix BIOS).
Добавлена опция командной строки /nocheck,
запрещающая прерывание по проверке машины (machine
check interrupt) на процессорах Pentium и Pentium-II.</p>

<p>1.01 (22 января 1998). Изменен способ выработки
сброса процессора для перезагрузки. Теперь
вместо перевода процессора в shutwodn (не работало на
Pentium Pro/FX440) используется сброс с помощью
контроллера клавиатуры. Добавлено выключение
двигателя флоппи-диска перед переходом в
защищенный режим, чтобы в случае загрузки
программы с дискеты мотор дисковода не оставался
во включенном состоянии на все время теста.</p>

<p>1.0 (30 декабря 1997). Исходная версия.</p>
</body>
</html>
